{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Varnish Configuration Language",
  "patterns": [
    {
      "include": "#macros"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#types"
    },
    {
      "include": "#variables"
    }
  ],
  "repository": {
    "macros": {
      "patterns": [
        {
          "name": "keyword.control.vcl",
          "match": "#FASTLY.+"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.number-sign.vcl",
          "match": "#.+"
        },
        {
          "name": "comment.line.double-slash.vcl",
          "match": "//.+"
        },
        {
          "name": "comment.line.block.vcl",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.numeric.vcl",
          "match": "(\\b|-)?[0-9]+(\\.[0-9])?\\s*(ms|s|m|h|d|y)\\b"
        },
        {
          "name": "constant.numeric.vcl",
          "match": "(\\b|-)?[0-9]+(\\.[0-9])?(e[+-]?[0-9]+)?\\b"
        },
        {
          "name": "constant.numeric.vcl",
          "match": "(\\b|-)?0x[0-9A-Fa-f]+(\\.[0-9A-Fa-f]+)?(p[+-]?[0-9]+)?\\b\\b"
        },
        {
          "name": "constant.language.vcl",
          "match": "\\b(false|true)\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.vcl",
          "match": "\\b(else|if|return)\\b"
        },
        {
          "name": "keyword.other.vcl",
          "match": "\\b(acl|declare local|log|set|sin|unset)\\b"
        },
        {
          "name": "keyword.operator.vcl",
          "match": "(!|=|==|!=|>=|<=|>|<|~|!~|\\|\\||&&|[+*/%&^-|]=|rol=|ror=|\\|\\|=|\\+)"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.vcl",
          "begin": "{([a-z]+)?\"",
          "end": "\"\\1}",
          "patterns": [
            {
              "name": "constant.character.escape.vcl",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.double.vcl",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.vcl",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.vcl",
          "match": "\\b(ACL|BACKEND|BOOL|FLOAT|ID|INTEGER|IP|RTIME|STRING|TIME)\\b"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "support.variable.vcl",
          "match": "\\b(bereq|beresp|obj|req|resp)\\.[a-zA-Z0-9_.-]+"
        },
        {
          "name": "variable.other.vcl",
          "match": "\\b(var)\\.[a-zA-Z0-9_-]+"
        },
        {
          "name": "support.variable.vcl",
          "match": "\\b(now)\\b"
        }
      ]
    }
  },
  "scopeName": "source.vcl"
}
